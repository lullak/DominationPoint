@using System.Text.Json
@model GameDetailViewModel

@{
    ViewData["Title"] = $"Edit Game: {Model.Game.Name}";
    Layout = "_AdminLayout";
    int gridSize = 10;
}

<style>
    #map-grid {
        display: grid;
        grid-template-columns: repeat( @gridSize, 1fr);
        grid-template-rows: repeat( @gridSize, 1fr);
        width: 600px;
        height: 600px;
        border: 2px solid white;
        background-color: black;
    }

    .grid-cell-container {
        position: relative;
        border: 1px solid #444;
        cursor: pointer;
    }

    .cp-marker-border {
        border: 2px dashed #0d6efd;
        box-sizing: border-box;
    }

    .map-annotation-text {
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 14px;
        font-weight: bold;
        text-transform: uppercase;
        text-shadow: 1px 1px 2px black;
        pointer-events: none;
        z-index: 2;
    }
</style>

<h3>@ViewData["Title"]</h3>

<div class="row">
    <div class="col-lg-8">
        <p>Click any square to add an annotation or designate it as a Control Point.</p>
        <div id="map-grid">
            @for (int y = 1; y <= gridSize; y++)
            {
                @for (int x = 1; x <= gridSize; x++)
                {
                    var annotation = Model.Annotations.FirstOrDefault(a => a.PositionX == x && a.PositionY == y);
                    var cp = Model.ControlPoints.FirstOrDefault(p => p.PositionX == x && p.PositionY == y);
                    <div class="grid-cell-container @(cp != null ? "cp-marker-border" : "")" data-x="@x" data-y="@y" data-iscp="@(cp != null)">
                        @if (annotation != null)
                        {
                            <div class="map-annotation-text">@annotation.Text</div>
                        }
                    </div>
                }
            }
        </div>
    </div>
    <div class="col-lg-4">
        <h4>Participants</h4>
        <ul class="list-group mb-3">
            @foreach (var p in Model.Participants)
            {
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    @p.UserName
                    <form asp-action="RemoveParticipant" method="post" class="d-inline"><input type="hidden" name="gameId" value="@Model.Game.Id" /><input type="hidden" name="userId" value="@p.Id" /><button type="submit" class="btn btn-danger btn-sm">Remove</button></form>
                </li>
            }
        </ul>
        <h4>Available Teams</h4>
        <ul class="list-group">
            @foreach (var p in Model.NonParticipants)
            {
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    @p.UserName
                    <form asp-action="AddParticipant" method="post" class="d-inline"><input type="hidden" name="gameId" value="@Model.Game.Id" /><input type="hidden" name="userId" value="@p.Id" /><button type="submit" class="btn btn-success btn-sm">Add</button></form>
                </li>
            }
        </ul>
    </div>
</div>

<!-- Modal för att redigera en Tile -->
<div class="modal fade" id="editTileModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit Tile at <strong id="tileCoordinates"></strong></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="annotationText" class="form-label">Acronym (max 3 chars)</label>
                    <input type="text" class="form-control" id="annotationText" placeholder="E.g., 'OBJ'" maxlength="3">
                </div>
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="isCpCheckbox">
                    <label class="form-check-label" for="isCpCheckbox">Is Control Point</label>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="saveTileButton">Save Changes</button>
            </div>
        </div>
    </div>
</div>

<!-- GÖMT FORMULÄR -->
<form asp-action="EditMap" method="post" id="editMapForm">
    @Html.AntiForgeryToken()
    <input type="hidden" name="gameId" value="@Model.Game.Id" />
    <input type="hidden" id="PositionX" name="PositionX" />
    <input type="hidden" id="PositionY" name="PositionY" />
    <input type="hidden" id="Text" name="Text" />
    <input type="hidden" id="IsCp" name="IsCp" value="false" /> <!-- Standardvärde false -->
</form>

@section Scripts {
    <script>
        const annotations = @Html.Raw(JsonSerializer.Serialize(Model.Annotations));
        const grid = document.getElementById('map-grid');
        const editTileModal = new bootstrap.Modal(document.getElementById('editTileModal'));
        const saveButton = document.getElementById('saveTileButton');
        const tileCoordinatesSpan = document.getElementById('tileCoordinates');
        const annotationTextInput = document.getElementById('annotationText');
        const isCpCheckbox = document.getElementById('isCpCheckbox');

        let targetGridX = 0, targetGridY = 0;

        grid.addEventListener('click', function (e) {
            const cell = e.target.closest('.grid-cell-container');
            if (!cell) return;

            targetGridX = parseInt(cell.dataset.x);
            targetGridY = parseInt(cell.dataset.y);

            tileCoordinatesSpan.textContent = `(${targetGridX}, ${targetGridY})`;

            const existingAnnotation = annotations.find(a => a.positionX === targetGridX && a.positionY === targetGridY);
            annotationTextInput.value = existingAnnotation ? existingAnnotation.text : "";
            isCpCheckbox.checked = cell.dataset.iscp === 'True';

            editTileModal.show();
        });

        saveButton.addEventListener('click', function () {
            document.getElementById('PositionX').value = targetGridX;
            document.getElementById('PositionY').value = targetGridY;
            document.getElementById('Text').value = annotationTextInput.value;

            const isCpInput = document.getElementById('IsCp');
            isCpInput.value = isCpCheckbox.checked;

            document.getElementById('editMapForm').submit();
        });
    </script>
}